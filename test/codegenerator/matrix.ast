globals
global a            (-1) var  :mat [2, 2, 3] = None
global b            (-1) var  :mat [3.0, 3.0] = None
global c            (-1) var  :mat 0 = None
global print_matrix    fun  :void (mat)
global mat_x2          fun  :mat (mat)

 33  (program:start) e0 -> [  32] 
 32      (unit:) e0 -> [   1], e1 -> [  31] 
  1        (initialize:mat) e0 -> [   2], e1 -> [   3] 
           1:48:mat a = [[[1, 2, 3],[3,4,5]],[[1,8, 3],[3,4,5]]]
  2        (assign:('global', 'a'))  
           1:48:mat a = [[[1, 2, 3],[3,4,5]],[[1,8, 3],[3,4,5]]]
  3              (matrixliteral:{'values': [[[1.0, 2.0, 3.0], [3.0, 4.0, 5.0]], [[1.0, 8.0, 3.0], [3.0, 4.0, 5.0]]], 'shape': [2, 2, 3]})  
                 1:8:mat a = [[[1, 2, 3],[3,4,5]],[[1,8, 3],[3,4,5]]]
 31        (unit:) e0 -> [   4], e1 -> [  30] 
  4          (initialize:mat) e0 -> [   5], e1 -> [   6] 
             3:10:mat b[3,3]
  5          (assign:('global', 'b'))  
             3:10:mat b[3,3]
  6          (number:0)  
             3:10:mat b[3,3]
 30          (unit:) e0 -> [   7], e1 -> [  29] 
  7            (initialize:mat) e0 -> [   8], e1 -> [  11] 
               5:13:mat c = a + a
  8            (assign:('global', 'c'))  
               5:13:mat c = a + a
 11                  (binop:{'op': 'plus'}) e0 -> [   9], e1 -> [  10] 
                     5:10:mat c = a + a
  9                    (var reference:{'name': 'a', 'scope': 'global', 'type': 'mat'})  
                       5:8:mat c = a + a
 10                    (var reference:{'name': 'a', 'scope': 'global', 'type': 'mat'})  
                       5:12:mat c = a + a
 29            (unit:) e1 -> [  28] 
 28              (unit:) e0 -> [  21], e1 -> [  27] 
 21                (function definition:{'name': 'mat_x2', 'scope': {'m': local  m           p( 0) var  :mat 0 = None, 'm2': local  m2           (-1) var  :mat 0 = None}, 'rtype': 'mat', 'ptypes': [local  m           p( 0) var  :mat 0 = None]}) e0 -> [  20] 
                   9:8:fun mat mat_x2(mat m):
 20                    (unit:) e0 -> [  12], e1 -> [  19] 
 12                      (initialize:mat) e0 -> [  13], e1 -> [  16] 
                         10:18:    mat m2 = m + m
 13                      (assign:('local', 'm2'))  
                         10:18:    mat m2 = m + m
 16                            (binop:{'op': 'plus'}) e0 -> [  14], e1 -> [  15] 
                               10:15:    mat m2 = m + m
 14                              (var reference:{'name': 'm', 'scope': 'local', 'type': 'mat'})  
                                 10:13:    mat m2 = m + m
 15                              (var reference:{'name': 'm', 'scope': 'local', 'type': 'mat'})  
                                 10:17:    mat m2 = m + m
 19                      (unit:) e0 -> [  18] 
 18                        (return:) e0 -> [  17] 
                           11:4:    return m2
 17                          (var reference:{'name': 'm2', 'scope': 'local', 'type': 'mat'})  
                             11:11:    return m2
 27                (unit:) e0 -> [  22] 
 22                  (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  26] 
                     13:12:print_matrix(mat_x2(c))
 26                  (argument:) e1 -> [  23] 
                     13:12:print_matrix(mat_x2(c))
 23                      (call:{'name': 'mat_x2', 'type': 'mat'}) e0 -> [  25] 
                         13:13:print_matrix(mat_x2(c))
 25                      (argument:) e1 -> [  24] 
                         13:13:print_matrix(mat_x2(c))
 24                          (var reference:{'name': 'c', 'scope': 'global', 'type': 'mat'})  
                             13:20:print_matrix(mat_x2(c))
