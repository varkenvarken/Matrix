globals
global printdouble     fun  :void (double)
global printstring     fun  :void (str)
global print_matrix    fun  :void (mat)
global myfunc          fun  :void ()

 44  (program:start) e0 -> [  43] 
 43      (unit:) e1 -> [  42] 
 42        (unit:) e1 -> [  41] 
 41          (unit:) e1 -> [  40] 
 40            (unit:) e0 -> [  37], e1 -> [  39] 
 37              (function definition:{'name': 'myfunc', 'scope': {'d': local  d            (-1) var  :double  = None, 's': local  s            (-1) var  :str  = None, 'm': local  m            (-1) var  :mat 0 = None}, 'rtype': 'void', 'ptypes': []}) e0 -> [  36] 
                 6:9:fun void myfunc():
 36                  (unit:) e0 -> [   1], e1 -> [  35] 
  1                    (initialize:double) e0 -> [   2], e1 -> [   3] 
                       7:12:    double d
  2                    (assign:('local', 'd'))  
                       7:12:    double d
  3                    (number:0)  
                       7:12:    double d
 35                    (unit:) e0 -> [   4], e1 -> [  34] 
  4                      (initialize:str) e0 -> [   5], e1 -> [   6] 
                         8:9:    str s
  5                      (assign:('local', 's'))  
                         8:9:    str s
  6                      (stringliteral:"")  
                         8:9:    str s
 34                      (unit:) e0 -> [   7], e1 -> [  33] 
  7                        (initialize:mat) e0 -> [   8], e1 -> [   9] 
                           9:9:    mat m
  8                        (assign:('local', 'm'))  
                           9:9:    mat m
  9                        (number:0)  
                           9:9:    mat m
 33                        (unit:) e0 -> [  12], e1 -> [  32] 
 12                          (assign:d) e0 -> [  10], e1 -> [  11] 
                             10:6:    d = 3.14
 10                            (var reference:{'name': 'd', 'scope': 'local', 'type': 'double'})  
                               10:4:    d = 3.14
 11                            (number:3.14)  
                               10:8:    d = 3.14
 32                          (unit:) e0 -> [  13], e1 -> [  31] 
 13                            (call:{'name': 'printdouble', 'type': 'void'}) e0 -> [  15] 
                               11:4:    printdouble(d)
 15                            (argument:) e1 -> [  14] 
                               11:4:    printdouble(d)
 14                                (var reference:{'name': 'd', 'scope': 'local', 'type': 'double'})  
                                   11:16:    printdouble(d)
 31                            (unit:) e0 -> [  18], e1 -> [  30] 
 18                              (assign:s) e0 -> [  16], e1 -> [  17] 
                                 13:6:    s = "Hello, world!"
 16                                (var reference:{'name': 's', 'scope': 'local', 'type': 'str'})  
                                   13:4:    s = "Hello, world!"
 17                                (stringliteral:"Hello, world!")  
                                   13:8:    s = "Hello, world!"
 30                              (unit:) e0 -> [  19], e1 -> [  29] 
 19                                (call:{'name': 'printstring', 'type': 'void'}) e0 -> [  21] 
                                   14:4:    printstring(s)
 21                                (argument:) e1 -> [  20] 
                                   14:4:    printstring(s)
 20                                    (var reference:{'name': 's', 'scope': 'local', 'type': 'str'})  
                                       14:16:    printstring(s)
 29                                (unit:) e0 -> [  24], e1 -> [  28] 
 24                                  (assign:m) e0 -> [  22], e1 -> [  23] 
                                     16:6:    m = [[1,2],[3,4]]
 22                                    (var reference:{'name': 'm', 'scope': 'local', 'type': 'mat'})  
                                       16:4:    m = [[1,2],[3,4]]
 23                                    (matrixliteral:{'values': [[1.0, 2.0], [3.0, 4.0]], 'shape': [2, 2]})  
                                       16:8:    m = [[1,2],[3,4]]
 28                                  (unit:) e0 -> [  25] 
 25                                    (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  27] 
                                       17:4:    print_matrix(m)
 27                                    (argument:) e1 -> [  26] 
                                       17:4:    print_matrix(m)
 26                                        (var reference:{'name': 'm', 'scope': 'local', 'type': 'mat'})  
                                           17:17:    print_matrix(m)
 39              (unit:) e0 -> [  38] 
 38                (call:{'name': 'myfunc', 'type': 'void'})  
                   19:6:myfunc()
