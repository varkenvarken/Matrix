Parsetree

 id  node
---------
 46  (program:) e1 -> [  47] :
 47    (unit:) e0 -> [   6], e1 -> [  48] :
  6      (function declaration:printdouble) e0 -> [   5], e1 -> [   4] @   1:  7:extern fun void printdouble(double d)
  5        (return type:void)  @   1:  7:extern fun void printdouble(double d)
  4        (plist:) e1 -> [   3] :
  3          (parameter:d) e0 -> [   2] @   1: 35:extern fun void printdouble(double d)
  2            (ptype:double)  @   1: 28:extern fun void printdouble(double d)
 48      (unit:) e0 -> [  12], e1 -> [  49] :
 12        (function declaration:printstring) e0 -> [  11], e1 -> [  10] @   2:  7:extern fun void printstring(str s)
 11          (return type:void)  @   2:  7:extern fun void printstring(str s)
 10          (plist:) e1 -> [   9] :
  9            (parameter:s) e0 -> [   8] @   2: 32:extern fun void printstring(str s)
  8              (ptype:str)  @   2: 28:extern fun void printstring(str s)
 49        (unit:) e0 -> [  18], e1 -> [  50] :
 18          (function declaration:print_matrix) e0 -> [  17], e1 -> [  16] @   3:  7:extern fun void print_matrix(mat m)
 17            (return type:void)  @   3:  7:extern fun void print_matrix(mat m)
 16            (plist:) e1 -> [  15] :
 15              (parameter:m) e0 -> [  14] @   3: 33:extern fun void print_matrix(mat m)
 14                (ptype:mat)  @   3: 29:extern fun void print_matrix(mat m)
 50          (unit:) e0 -> [  23], e1 -> [  51] :
 23            (vardeclist:var) e0 -> [  19], e1 -> [  22] @   6: 17:double count = 10
 19              (ptype:double)  @   6:  0:double count = 10
 22              (vardecls:) e0 -> [  21] :
 21                (vardecl:count) e0 -> [  20] @   6:  7:double count = 10
 20                  (number:10.0)  @   6: 15:double count = 10
 51            (unit:) e0 -> [  29], e1 -> [  52] :
 29              (vardeclist:var) e0 -> [  24], e1 -> [  28] @   7: 49:double dec = -1 // we haven implemented minus yet
 24                (ptype:double)  @   7:  0:double dec = -1 // we haven implemented minus yet
 28                (vardecls:) e0 -> [  27] :
 27                  (vardecl:dec) e0 -> [  26] @   7:  7:double dec = -1 // we haven implemented minus yet
 26                    (uminus:) e0 -> [  25] @   7: 13:double dec = -1 // we haven implemented minus yet
 25                      (number:1.0)  @   7: 14:double dec = -1 // we haven implemented minus yet
 52              (unit:) e0 -> [  42], e1 -> [  53] :
 42                (while:) e0 -> [  30], e1 -> [  39] @   9: 11:while count:
 30                  (name:count)  @   9:  6:while count:
 39                  (suite:) e1 -> [  40] :
 40                    (simpleunit:) e0 -> [  33], e1 -> [  41] :
 33                      (function call:printdouble) e0 -> [  32] @  10:  4:    printdouble(count)
 32                        (alist:) e1 -> [  31] :
 31                          (name:count)  @  10: 16:    printdouble(count)
 41                      (simpleunit:) e0 -> [  38] :
 38                        (assignment:) e0 -> [  34], e1 -> [  37] @  11: 10:    count = count + dec
 34                          (name:count)  @  11:  4:    count = count + dec
 37                          (plus:) e0 -> [  35], e1 -> [  36] @  11: 18:    count = count + dec
 35                            (name:count)  @  11: 12:    count = count + dec
 36                            (name:dec)  @  11: 20:    count = count + dec
 53                (unit:) e0 -> [  45] :
 45                  (function call:printstring) e0 -> [  44] @  13: 11:printstring("done")
 44                    (alist:) e1 -> [  43] :
 43                      (stringliteral:"done")  @  13: 12:printstring("done")

