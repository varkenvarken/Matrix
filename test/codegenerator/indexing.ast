globals
global printdouble     fun  :void (double)
global printstring     fun  :void (str)
global print_matrix    fun  :void (mat)
global m            (-1) var  :mat [2, 2] = None

 53  (program:start) e0 -> [  52] 
 52      (unit:) e1 -> [  51] 
 51        (unit:) e1 -> [  50] 
 50          (unit:) e1 -> [  49] 
 49            (unit:) e0 -> [   1], e1 -> [  48] 
  1              (initialize:mat) e0 -> [   2], e1 -> [   3] 
                 6:21:mat m = [[1,2],[3,4]]
  2              (assign:('global', 'm'))  
                 6:21:mat m = [[1,2],[3,4]]
  3                    (matrixliteral:{'values': [[1.0, 2.0], [3.0, 4.0]], 'shape': [2, 2]})  
                       6:8:mat m = [[1,2],[3,4]]
 48              (unit:) e0 -> [   4], e1 -> [  47] 
  4                (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [   9] 
                   8:12:print_matrix(m[0])
  9                (argument:) e1 -> [   8] 
                   8:12:print_matrix(m[0])
  8                    (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'}) e0 -> [   7] 
                       8:13:print_matrix(m[0])
  7                      (indexlist:) e0 -> [   6] 
                         8:14:print_matrix(m[0])
  6                        (index:) e0 -> [   5] 
  5                          (number:0.0)  
                             8:15:print_matrix(m[0])
 47                (unit:) e0 -> [  10], e1 -> [  46] 
 10                  (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  18] 
                     10:12:print_matrix(m[0][1])
 18                  (argument:) e1 -> [  17] 
                     10:12:print_matrix(m[0][1])
 17                      (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'}) e0 -> [  16] 
                         10:13:print_matrix(m[0][1])
 16                        (indexlist:) e0 -> [  12], e1 -> [  15] 
                           10:14:print_matrix(m[0][1])
 12                          (index:) e0 -> [  11] 
 11                            (number:0.0)  
                               10:15:print_matrix(m[0][1])
 15                          (indexlist:) e0 -> [  14] 
                             10:17:print_matrix(m[0][1])
 14                            (index:) e0 -> [  13] 
 13                              (number:1.0)  
                                 10:18:print_matrix(m[0][1])
 46                  (unit:) e0 -> [  27], e1 -> [  45] 
 27                    (assign:m) e0 -> [  25], e1 -> [  26] 
                       12:8:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 25                      (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'}) e0 -> [  24] 
                         12:0:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 24                        (indexlist:) e0 -> [  20], e1 -> [  23] 
                           12:1:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 20                          (index:) e0 -> [  19] 
 19                            (number:1.0)  
                               12:2:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 23                          (indexlist:) e0 -> [  22] 
                             12:4:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 22                            (index:) e0 -> [  21] 
 21                              (number:1.0)  
                                 12:5:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 26                      (matrixliteral:{'values': [3.14], 'shape': [1]})  
                         12:10:m[1][1] = [3.14] // a matrix literal of 1 dimension with length 1
 45                    (unit:) e0 -> [  28], e1 -> [  44] 
 28                      (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  30] 
                         14:12:print_matrix(m)
 30                      (argument:) e1 -> [  29] 
                         14:12:print_matrix(m)
 29                          (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'})  
                             14:13:print_matrix(m)
 44                      (unit:) e0 -> [  39], e1 -> [  43] 
 39                        (assign:m) e0 -> [  34], e1 -> [  38] 
                           16:5:m[0] = m[1]
 34                          (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'}) e0 -> [  33] 
                             16:0:m[0] = m[1]
 33                            (indexlist:) e0 -> [  32] 
                               16:1:m[0] = m[1]
 32                              (index:) e0 -> [  31] 
 31                                (number:0.0)  
                                   16:2:m[0] = m[1]
 38                          (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'}) e0 -> [  37] 
                             16:7:m[0] = m[1]
 37                            (indexlist:) e0 -> [  36] 
                               16:8:m[0] = m[1]
 36                              (index:) e0 -> [  35] 
 35                                (number:1.0)  
                                   16:9:m[0] = m[1]
 43                        (unit:) e0 -> [  40] 
 40                          (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  42] 
                             18:12:print_matrix(m)
 42                          (argument:) e1 -> [  41] 
                             18:12:print_matrix(m)
 41                              (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'})  
                                 18:13:print_matrix(m)
