globals
global printdouble     fun  :void (double)
global printstring     fun  :void (str)
global print_matrix    fun  :void (mat)
global c            (-1) var  :double  = None
global s            (-1) var  :str  = None
global m            (-1) var  :mat 0 = None

 44  (program:start) e0 -> [  43] 
 43      (unit:) e1 -> [  42] 
 42        (unit:) e1 -> [  41] 
 41          (unit:) e1 -> [  40] 
 40            (unit:) e0 -> [   1], e1 -> [  39] 
  1              (initialize:double) e0 -> [   2], e1 -> [   3] 
                 6:8:double c
  2              (assign:('global', 'c'))  
                 6:8:double c
  3              (number:0)  
                 6:8:double c
 39              (unit:) e0 -> [   4], e1 -> [  38] 
  4                (initialize:str) e0 -> [   5], e1 -> [   6] 
                   7:5:str s
  5                (assign:('global', 's'))  
                   7:5:str s
  6                (stringliteral:"")  
                   7:5:str s
 38                (unit:) e0 -> [   7], e1 -> [  37] 
  7                  (initialize:mat) e0 -> [   8], e1 -> [   9] 
                     8:5:mat m
  8                  (assign:('global', 'm'))  
                     8:5:mat m
  9                  (number:0)  
                     8:5:mat m
 37                  (unit:) e0 -> [  14], e1 -> [  36] 
 14                    (assign:c) e0 -> [  10], e1 -> [  13] 
                       10:2:c = 1 + 3
 10                      (var reference:{'name': 'c', 'scope': 'global', 'type': 'double'})  
                         10:0:c = 1 + 3
 13                      (binop:{'op': 'plus'}) e0 -> [  11], e1 -> [  12] 
                         10:6:c = 1 + 3
 11                        (number:1.0)  
                           10:4:c = 1 + 3
 12                        (number:3.0)  
                           10:8:c = 1 + 3
 36                    (unit:) e0 -> [  19], e1 -> [  35] 
 19                      (assign:s) e0 -> [  15], e1 -> [  18] 
                         11:2:s = "Hello, " + "world!"
 15                        (var reference:{'name': 's', 'scope': 'global', 'type': 'str'})  
                           11:0:s = "Hello, " + "world!"
 18                        (binop:{'op': 'plus'}) e0 -> [  16], e1 -> [  17] 
                           11:14:s = "Hello, " + "world!"
 16                          (stringliteral:"Hello, ")  
                             11:4:s = "Hello, " + "world!"
 17                          (stringliteral:"world!")  
                             11:16:s = "Hello, " + "world!"
 35                      (unit:) e0 -> [  22], e1 -> [  34] 
 22                        (assign:m) e0 -> [  20], e1 -> [  21] 
                           12:2:m = [[1,2],[3,4]]
 20                          (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'})  
                             12:0:m = [[1,2],[3,4]]
 21                          (matrixliteral:{'values': [[1.0, 2.0], [3.0, 4.0]], 'shape': [2, 2]})  
                             12:4:m = [[1,2],[3,4]]
 34                        (unit:) e0 -> [  23], e1 -> [  33] 
 23                          (call:{'name': 'printdouble', 'type': 'void'}) e0 -> [  25] 
                             14:11:printdouble(c)
 25                          (argument:) e1 -> [  24] 
                             14:11:printdouble(c)
 24                              (var reference:{'name': 'c', 'scope': 'global', 'type': 'double'})  
                                 14:12:printdouble(c)
 33                          (unit:) e0 -> [  26], e1 -> [  32] 
 26                            (call:{'name': 'printstring', 'type': 'void'}) e0 -> [  28] 
                               15:11:printstring(s)
 28                            (argument:) e1 -> [  27] 
                               15:11:printstring(s)
 27                                (var reference:{'name': 's', 'scope': 'global', 'type': 'str'})  
                                   15:12:printstring(s)
 32                            (unit:) e0 -> [  29] 
 29                              (call:{'name': 'print_matrix', 'type': 'void'}) e0 -> [  31] 
                                 16:12:print_matrix(m)
 31                              (argument:) e1 -> [  30] 
                                 16:12:print_matrix(m)
 30                                  (var reference:{'name': 'm', 'scope': 'global', 'type': 'mat'})  
                                     16:13:print_matrix(m)
