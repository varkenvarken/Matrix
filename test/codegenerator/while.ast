globals
global printdouble     fun  :void (double)
global printstring     fun  :void (str)
global print_matrix    fun  :void (mat)
global count        (-1) var  :double  = None
global dec          (-1) var  :double  = None

 30  (program:start) e0 -> [  29] 
 29      (unit:) e1 -> [  28] 
 28        (unit:) e1 -> [  27] 
 27          (unit:) e1 -> [  26] 
 26            (unit:) e0 -> [   1], e1 -> [  25] 
  1              (initialize:double) e0 -> [   2], e1 -> [   3] 
                 6:17:double count = 10
  2              (assign:('global', 'count'))  
                 6:17:double count = 10
  3                    (number:10.0)  
                       6:15:double count = 10
 25              (unit:) e0 -> [   4], e1 -> [  24] 
  4                (initialize:double) e0 -> [   5], e1 -> [   7] 
                   7:49:double dec = -1 // we haven implemented minus yet
  5                (assign:('global', 'dec'))  
                   7:49:double dec = -1 // we haven implemented minus yet
  7                      (unop:{'op': 'uminus'}) e0 -> [   6] 
                         7:13:double dec = -1 // we haven implemented minus yet
  6                        (number:1.0)  
                           7:14:double dec = -1 // we haven implemented minus yet
 24                (unit:) e0 -> [  19], e1 -> [  23] 
 19                  (while:) e0 -> [   8], e1 -> [  18] 
                     9:11:while count:
  8                    (var reference:{'name': 'count', 'scope': 'global', 'type': 'double'})  
                       9:6:while count:
 18                      (unit:) e0 -> [   9], e1 -> [  17] 
  9                        (call:{'name': 'printdouble', 'type': 'void'}) e0 -> [  11] 
                           10:4:    printdouble(count)
 11                        (argument:) e1 -> [  10] 
                           10:4:    printdouble(count)
 10                            (var reference:{'name': 'count', 'scope': 'global', 'type': 'double'})  
                               10:16:    printdouble(count)
 17                        (unit:) e0 -> [  16] 
 16                          (assign:count) e0 -> [  12], e1 -> [  15] 
                             11:10:    count = count + dec
 12                            (var reference:{'name': 'count', 'scope': 'global', 'type': 'double'})  
                               11:4:    count = count + dec
 15                            (binop:{'op': 'plus'}) e0 -> [  13], e1 -> [  14] 
                               11:18:    count = count + dec
 13                              (var reference:{'name': 'count', 'scope': 'global', 'type': 'double'})  
                                 11:12:    count = count + dec
 14                              (var reference:{'name': 'dec', 'scope': 'global', 'type': 'double'})  
                                 11:20:    count = count + dec
 23                  (unit:) e0 -> [  20] 
 20                    (call:{'name': 'printstring', 'type': 'void'}) e0 -> [  22] 
                       13:11:printstring("done")
 22                    (argument:) e1 -> [  21] 
                       13:11:printstring("done")
 21                        (stringliteral:"done")  
                           13:12:printstring("done")
