Parsetree

 id  node
---------
 58  (program:) e1 -> [  59] :
 59    (unit:) e0 -> [   6], e1 -> [  60] :
  6      (function declaration:printdouble) e0 -> [   5], e1 -> [   4] @   1:  7:extern fun void printdouble(double d)
  5        (return type:void)  @   1:  7:extern fun void printdouble(double d)
  4        (plist:) e1 -> [   3] :
  3          (parameter:d) e0 -> [   2] @   1: 35:extern fun void printdouble(double d)
  2            (ptype:double)  @   1: 28:extern fun void printdouble(double d)
 60      (unit:) e0 -> [  12], e1 -> [  61] :
 12        (function declaration:printstring) e0 -> [  11], e1 -> [  10] @   2:  7:extern fun void printstring(str s)
 11          (return type:void)  @   2:  7:extern fun void printstring(str s)
 10          (plist:) e1 -> [   9] :
  9            (parameter:s) e0 -> [   8] @   2: 32:extern fun void printstring(str s)
  8              (ptype:str)  @   2: 28:extern fun void printstring(str s)
 61        (unit:) e0 -> [  17], e1 -> [  62] :
 17          (vardeclist:var) e0 -> [  13], e1 -> [  16] @   4: 19:str hello = "Hello"
 13            (ptype:str)  @   4:  0:str hello = "Hello"
 16            (vardecls:) e0 -> [  15] :
 15              (vardecl:hello) e0 -> [  14] @   4:  4:str hello = "Hello"
 14                (stringliteral:"Hello")  @   4: 12:str hello = "Hello"
 62          (unit:) e0 -> [  51], e1 -> [  63] :
 51            (function definition:myfunc) e0 -> [  50], e1 -> [  24], e2 -> [  45] @   6:  9:fun void myfunc(str a, double b):
 50              (return type:void)  @   6:  9:fun void myfunc(str a, double b):
 24              (plist:) e0 -> [  21], e1 -> [  23] :
 21                (plist:) e1 -> [  20] :
 20                  (parameter:a) e0 -> [  19] @   6: 20:fun void myfunc(str a, double b):
 19                    (ptype:str)  @   6: 16:fun void myfunc(str a, double b):
 23                (parameter:b) e0 -> [  22] @   6: 21:fun void myfunc(str a, double b):
 22                  (ptype:double)  @   6: 23:fun void myfunc(str a, double b):
 45              (suite:) e1 -> [  46] :
 46                (simpleunit:) e0 -> [  31], e1 -> [  47] :
 31                  (vardeclist:var) e0 -> [  25], e1 -> [  30] @   7: 80:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 25                    (ptype:double)  @   7:  4:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 30                    (vardecls:) e0 -> [  29] :
 29                      (vardecl:bbb) e0 -> [  28] @   7: 11:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 28                        (plus:) e0 -> [  26], e1 -> [  27] @   7: 22:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 26                          (number:3.14)  @   7: 17:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 27                          (name:b)  @   7: 24:    double bbb = 3.14 + b     // we should that var refs are to initialized vars
 47                  (simpleunit:) e0 -> [  38], e1 -> [  48] :
 38                    (vardeclist:var) e0 -> [  32], e1 -> [  37] @   8: 63:    str aaa = a + " world"    // assignment does not check type
 32                      (ptype:str)  @   8:  4:    str aaa = a + " world"    // assignment does not check type
 37                      (vardecls:) e0 -> [  36] :
 36                        (vardecl:aaa) e0 -> [  35] @   8:  8:    str aaa = a + " world"    // assignment does not check type
 35                          (plus:) e0 -> [  33], e1 -> [  34] @   8: 16:    str aaa = a + " world"    // assignment does not check type
 33                            (name:a)  @   8: 14:    str aaa = a + " world"    // assignment does not check type
 34                            (stringliteral:" world")  @   8: 18:    str aaa = a + " world"    // assignment does not check type
 48                    (simpleunit:) e0 -> [  41], e1 -> [  49] :
 41                      (function call:printdouble) e0 -> [  40] @   9:  4:    printdouble(bbb)
 40                        (alist:) e1 -> [  39] :
 39                          (name:bbb)  @   9: 16:    printdouble(bbb)
 49                      (simpleunit:) e0 -> [  44] :
 44                        (function call:printstring) e0 -> [  43] @  10:  4:    printstring(aaa)
 43                          (alist:) e1 -> [  42] :
 42                            (name:aaa)  @  10: 16:    printstring(aaa)
 63            (unit:) e0 -> [  57] :
 57              (function call:myfunc) e0 -> [  56] @  12:  6:myfunc(hello, -3.14)
 56                (alist:) e0 -> [  53], e1 -> [  55] @  12: 12:myfunc(hello, -3.14)
 53                  (alist:) e1 -> [  52] :
 52                    (name:hello)  @  12:  7:myfunc(hello, -3.14)
 55                  (uminus:) e0 -> [  54] @  12: 14:myfunc(hello, -3.14)
 54                    (number:3.14)  @  12: 15:myfunc(hello, -3.14)

